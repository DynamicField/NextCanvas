<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:NextCanvas.Controls"
    xmlns:content="clr-namespace:NextCanvas.Controls.Content"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    x:Class="NextCanvas.Controls.XamlRichTextEditor"
    xmlns:collection="clr-namespace:System.Collections;assembly=mscorlib"
    xmlns:converters="clr-namespace:NextCanvas.Converters"
    xmlns:fluent="urn:fluent-ribbon"
    xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:nextCanvas="clr-namespace:NextCanvas" Loaded="RtfRichTextEditor_OnLoaded"
    mc:Ignorable="d po" x:Name="Control" Focusable="True"
    BorderThickness="0" BorderBrush="#FFE2E2E2"
    d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Style>
        <Style TargetType="UserControl">
            <Style.Triggers>
                <DataTrigger Binding="{Binding EditorFormatShown, ElementName=Control}" Value="True">
                    <Setter Property="BorderThickness" Value="1" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Style>
    <UserControl.Resources>
        <converters:FamilyNamesCollectionConverter x:Key="FamilyConverter" />
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded" />
    </UserControl.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <content:XamlRichTextBox
            XamlText="{Binding XamlText, ElementName=Control, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            IsUndoEnabled="True" Background="{x:Null}" x:Name="TextBox" SelectionChanged="TextBox_OnSelectionChanged"
            FontSize="{Binding Path=DefaultFontSize, Source={x:Static nextCanvas:SettingsManager.Settings}, Mode=OneTime}"
            FontFamily="{Binding Path=DefaultFontFamily, Source={x:Static nextCanvas:SettingsManager.Settings}, Mode=OneTime}"
            Foreground="{Binding Path=DefaultTextBoxColor, Source={x:Static nextCanvas:SettingsManager.Settings}, Mode=OneTime}">
            <content:XamlRichTextBox.Resources>
                <Style TargetType="{x:Type List}">
                    <Setter Property="MarkerOffset" Value="7" />
                </Style>
            </content:XamlRichTextBox.Resources>
            <content:XamlRichTextBox.Style>
                <Style TargetType="{x:Type content:XamlRichTextBox}">
                    <Setter Property="Margin" Value="0" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding EditorFormatShown, ElementName=Control}" Value="False">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Margin" Value="1" />
                        </DataTrigger>
                        <Trigger Property="local:NextInkCanvas.IsHostedInLightweightRendering" Value="True">
                            <Setter Property="TextOptions.TextRenderingMode" Value="Aliased" />
                            <Setter Property="TextOptions.TextHintingMode" Value="Fixed" />
                            <Setter Property="Focusable" Value="False" />
                            <Setter Property="IsEnabled" Value="False" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </content:XamlRichTextBox.Style>
        </content:XamlRichTextBox>

        <ScrollViewer VerticalAlignment="Bottom" VerticalScrollBarVisibility="Hidden"
                      HorizontalScrollBarVisibility="Auto">
            <Border x:Name="Border" VerticalAlignment="Bottom" Opacity="0.90">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding EditorFormatShown, ElementName=Control}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsFocused, ElementName=TextBox}">
                                <Setter Property="BorderThickness" Value="1,0,0,0" />
                                <Setter Property="BorderBrush" Value="{Binding BorderBrush, ElementName=TextBox}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Border Background="#FFECECEC" Padding="3">
                    <DockPanel>
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                            <StackPanel.Resources>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="Width" Value="20" />
                                    <Setter Property="FontFamily" Value="Georgia" />
                                    <Setter Property="Margin" Value="2,0" />
                                    <Setter Property="CommandTarget" Value="{Binding ElementName=TextBox}" />
                                </Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Margin" Value="2,0" />
                                    <Setter Property="Width" Value="20" />
                                </Style>
                            </StackPanel.Resources>
                            <ToggleButton x:Name="BoldButton" Command="EditingCommands.ToggleBold" Click="FocusTextBox">
                                <Run Text="B" FontWeight="Bold" />
                            </ToggleButton>
                            <ToggleButton x:Name="ItalicButton" Command="ToggleItalic" Click="FocusTextBox">
                                <Run Text="I" FontStyle="Italic" FontFamily="Georgia" />
                            </ToggleButton>
                            <ToggleButton x:Name="UnderlineButton" Command="ToggleUnderline" Click="FocusTextBox">
                                <Run Text="U" FontFamily="Georgia" TextDecorations="Underline" />
                            </ToggleButton>
                            <Button x:Name="ColorButton" Click="ColorButton_OnClick">
                                <StackPanel Margin="0,0,0,2">
                                    <TextBlock Text="A" FontFamily="Segoe UI" FontWeight="Bold" Foreground="#FF363636" />
                                    <Rectangle Height="2" Margin="-2,-6,-2,-2" x:Name="ColorRectangle">
                                        <Rectangle.Fill>
                                            <SolidColorBrush
                                                Color="{Binding Path=DefaultTextBoxColor, Source={x:Static nextCanvas:SettingsManager.Settings}, Mode=OneTime}" />
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </StackPanel>
                            </Button>
                            <ToggleButton x:Name="BulletsListButton" Command="ToggleBullets">
                                <StackPanel HorizontalAlignment="Left" Orientation="Vertical">
                                    <StackPanel.Resources>
                                        <SolidColorBrush x:Key="BulletBrush" Color="Blue" po:Freeze="True" />
                                        <SolidColorBrush x:Key="LineBrush" Color="Black" po:Freeze="True" />
                                        <Style TargetType="{x:Type StackPanel}">
                                            <Setter Property="Margin" Value="0,1" />
                                            <Setter Property="Orientation" Value="Horizontal" />
                                        </Style>
                                        <Style TargetType="{x:Type Ellipse}">
                                            <Setter Property="Fill" Value="{StaticResource BulletBrush}" />
                                            <Setter Property="Width" Value="2" />
                                            <Setter Property="Height" Value="2" />
                                            <Setter Property="Margin" Value="0,0,1,0" />
                                        </Style>
                                        <Style TargetType="{x:Type Line}">
                                            <Setter Property="Stroke" Value="{StaticResource LineBrush}" />
                                            <Setter Property="X2" Value="10" />
                                            <Setter Property="Y2" Value="0" />
                                            <Setter Property="VerticalAlignment" Value="Center" />
                                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                                            <Setter Property="UseLayoutRounding" Value="True"/>
                                        </Style>
                                    </StackPanel.Resources>
                                    <StackPanel SnapsToDevicePixels="True">
                                        <Ellipse />
                                        <Line />
                                    </StackPanel>
                                    <StackPanel>
                                        <Ellipse />
                                        <Line />
                                    </StackPanel>
                                    <StackPanel>
                                        <Ellipse />
                                        <Line />
                                    </StackPanel>
                                </StackPanel>
                            </ToggleButton>
                            <ComboBox HorizontalAlignment="Left"
                                      Text="{Binding DefaultFontSize, Mode=OneTime, Source={x:Static nextCanvas:SettingsManager.Settings}}"
                                      VerticalAlignment="Top" Margin="2,0"
                                      IsEditable="True" TextBoxBase.TextChanged="FontSizeChanged"
                                      x:Name="FontSizeBox">
                                <system:Int32>8</system:Int32>
                                <system:Int32>9</system:Int32>
                                <system:Int32>10</system:Int32>
                                <system:Int32>12</system:Int32>
                                <system:Int32>16</system:Int32>
                                <system:Int32>24</system:Int32>
                                <system:Int32>32</system:Int32>
                                <system:Int32>40</system:Int32>
                                <system:Int32>56</system:Int32>
                                <system:Int32>78</system:Int32>
                                <system:Int32>86</system:Int32>
                                <system:Int32>104</system:Int32>
                                <system:Int32>120</system:Int32>
                                <system:Int32>144</system:Int32>
                                <system:Int32>160</system:Int32>
                                <system:Int32>220</system:Int32>
                            </ComboBox>
                            <ComboBox
                                ItemsSource="{Binding (collection:ICollection.SyncRoot), Source={x:Static Fonts.SystemFontFamilies}}"
                                x:Name="FontFamilyBox"
                                SelectedItem="{Binding DefaultFontFamily, Mode=OneTime, Source={x:Static nextCanvas:SettingsManager.Settings}}"
                                SelectionChanged="FontBox_OnSelectionChanged" Margin="2,0"
                                VerticalContentAlignment="Center">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type FontFamily}">
                                        <TextBlock FontSize="10"
                                                   Text="{Binding ., Converter={StaticResource FamilyConverter}}"
                                                   FontFamily="{Binding}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel VirtualizingPanel.IsVirtualizing="True"
                                                                VirtualizingPanel.VirtualizationMode="Recycling" />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                        </StackPanel>
                        <Button DockPanel.Dock="Right" HorizontalAlignment="Right" Width="26" Click="OpenInANewWindow">
                            <Image Height="16" Source="/NextCanvas;component/Images/TextEditor/OpenInANewWindow.png"
                                   HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,1,0" />
                        </Button>
                    </DockPanel>
                </Border>
            </Border>
        </ScrollViewer>
    </Grid>
</UserControl>